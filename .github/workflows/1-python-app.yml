# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "feature/*" ]

permissions:
  contents: write
  pull-requests: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.12
      uses: actions/setup-python@v3
      with:
        python-version: "3.12"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pytest

  create-pull-request:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - uses: actions/checkout@v4
    - name: create pull request
      run: |
        pr_url=$(gh pr list -H develop -B main --json url -q '.[0].url')
        if [ -z "$pr_url" ]; then
          gh pr create -H develop --title 'Pull request from feature branch >> Develop' --body 'This is an automated pull request from feature branch to develop.'
        else
          pr_state=$(gh pr view "$pr_url" --json state -q '.state')
          if [ "$pr_state" = "OPEN" ]; then
            gh pr comment "$pr_url" --body 'New commits have been pushed to the feature branch.'
          else
            gh pr create -H develop --title 'Pull request from feature branch >> Develop' --body 'This is an automated pull request from feature branch to develop.'
          fi
        fi
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}